security:
  encoders:
    App\Entity\User:
      algorithm: auto

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    login:
      pattern: ^/api/login
      stateless: true
      anonymous: true
      json_login:
        check_path: /api/login_check
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    refresh:
      pattern: ^/api/token/refresh
      stateless: true
      anonymous: true

    api:
      pattern: ^/api
      stateless: true
      anonymous: true
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator

    main:
      anonymous: lazy
      guard:
        authenticators:
          - App\Security\AppUserAuthenticator
      logout:
        path: app_logout
        # where to redirect after logout
        # target: app_any_route
      remember_me:
        secret: "%kernel.secret%"
        lifetime: 604800 # 1 week in seconds
        path: /
      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication
      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: "^/_admin_", roles: ROLE_ADMIN }
    # - { path: ^/profile, roles: ROLE_USER }
    - { path: "^/register", roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: "^/login", roles: IS_AUTHENTICATED_ANONYMOUSLY }

    # Limitations sur les routes API

    - { path: "^/api/login", roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: "^/api/token/refresh", roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: "^/api", roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: "^/", roles: IS_AUTHENTICATED_ANONYMOUSLY }

  role_hierarchy:
    ROLE_ADMIN: [ROLE_PARTNER, ROLE_ORGANIZER]
    ROLE_ORGANIZER: [ROLE_USER]
    ROLE_PARTNER: [ROLE_USER]
